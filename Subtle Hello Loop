Add-Type -AssemblyName System.speech
$speak = New-Object System.Speech.Synthesis.SpeechSynthesizer




# caps lock indicator light
$blinks = 3;$o=New-Object -ComObject WScript.Shell;for ($num = 1 ; $num -le $blinks*2; $num++){$o.SendKeys("{CAPSLOCK}");Start-Sleep -Milliseconds 250}



#-----------------------------------------------------------------------------------------------------------

<#
.NOTES 
	Then the script will be paused until the mouse is moved 
	script will check mouse position every indicated number of seconds
	This while loop will constantly check if the mouse has been moved 
	"CAPSLOCK" will be continuously pressed to prevent screen from turning off
	it will then sleep for the indicated number of seconds and check again
	when mouse is moved it will break out of the loop and continue the script
#>


Add-Type -AssemblyName System.Windows.Forms
$originalPOS = [System.Windows.Forms.Cursor]::Position.X

    while (1) {
        $pauseTime = 3
        if ([Windows.Forms.Cursor]::Position.X -ne $originalPOS){
            break
        }
        else {
            $o.SendKeys("{CAPSLOCK}");Start-Sleep -Seconds $pauseTime
        }
    }
echo "it worked"

for ($var = 1; $var = -1; $var++) {

$speak.Speak('Hello')
Start-Sleep -seconds 120
$speak.Speak('Hello')
Start-Sleep -seconds 120
$speak.Speak('I')
Start-Sleep -seconds 20
$speak.Speak('am')
Start-Sleep -seconds 20
$speak.Speak('always')
Start-Sleep -seconds 20
$speak.Speak('watching')
Start-Sleep -seconds 120
$speak.Speak('penis')
Start-Sleep -seconds 300
}
Write-Host End of for loop.
